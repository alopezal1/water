<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.web.things</groupId>
	<artifactId>spring-scope</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>spring-scope</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jetty.version>7.6.3.v20120416</jetty.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>3.2.3.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>com.web.things</groupId>
			<artifactId>springioc</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
	
	
	<!-- tomcat 插件仓库，不指定则下载不了相应插件 -->
	<!-- <repositories> <repository> <id>people.apache.snapshots</id> <url>http://repository.apache.org/content/groups/snapshots-group/</url> 
		<releases> <enabled>true</enabled> </releases> <snapshots> <enabled>false</enabled> 
		</snapshots> </repository> </repositories> <pluginRepositories> <pluginRepository> 
		<id>apache.snapshots</id> <name>Apache Snapshots</name> <url>http://repository.apache.org/content/groups/snapshots-group/</url> 
		<releases> <enabled>true</enabled> </releases> <snapshots> <enabled>false</enabled> 
		</snapshots> </pluginRepository> </pluginRepositories> -->

	<build>
		<finalName>spring-scope</finalName>
		<plugins>
			<!-- jetty插件 -->
			<!-- <plugin> <groupId>org.mortbay.jetty</groupId> <artifactId>jetty-maven-plugin</artifactId> 
				<version>${jetty.version}</version> <configuration> <stopKey>foo</stopKey> 
				<stopPort>9999</stopPort> web应用的配置，不写默认为当前的artifactId <webAppConfig> <contextPath>/springscope</contextPath> 
				</webAppConfig> </configuration> -->

			<!-- 有时候，例如在做集成测试时，你当然希望在测试开始时自动运行你的项目，测试完成时停止，而不只是手动的在命令行执行mvn jetty:run吧。 
				要做到这一点，你需要为jetty 插件创建几个<execution>脚本，并使用<daemon>true</daemon>配置选项来预防Jetty无限期运行，迫使它只在执行Maven时才运行。 
				像下面pom.xml片段中描述的pre-integration-test和post-integration-test 就是用来触发执行和关闭Jetty： -->
			<!-- <executions> <execution> <id>start-jetty</id> <phase>pre-integration-test</phase> 
				<goals> <goal>run</goal> </goals> <configuration> <scanIntervalSeconds>0</scanIntervalSeconds> 
				<daemon>true</daemon> </configuration> </execution> <execution> <id>stop-jetty</id> 
				<phase>post-integration-test</phase> <goals> <goal>stop</goal> </goals> </execution> 
				</executions> </plugin> -->

			<!-- tomcat插件 -->
			<!-- <plugin> <groupId>org.apache.tomcat.maven</groupId> <artifactId>tomcat7-maven-plugin</artifactId> 
				<version>2.0-beta-1</version> </plugin> -->
		</plugins>
	</build>
</project>
